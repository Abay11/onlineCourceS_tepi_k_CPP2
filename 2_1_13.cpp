//
// Created by adygha on 11/1/17.
//

//По аналогии с функцией printf с предыдущего степа напишите функцию print_values
// с переменным числом аргументов, которая для каждого аргумента выводит его тип и
// значение в поток std::ostream, который ей передан в качестве первого аргумента.
// Функция должна работать с произвольным числом аргументов.
//Указание: для вывода имени типа нужно использовать std::type_info::name.
//Например, вызов функции
//print_values(std::cout, 0, 3.5, "Hello");
//должен вывести на стандартный вывод примерно следующее (таким будет вывод на g++).
//i: 0
//d: 3.5
//PKc: Hello
//
//Примечание: в этой и следующих задачах на программирование будет использоваться стандарт C++11.
// Если вы захотите решать задачи локально, то не забудьте включить поддержку стандарта C++11
// в вашем компиляторе. Например, в g++ и clang++ поддержка С++11
// включается при помощи следующего параметра командной строки: -std=c++11.
//
//Внимание: выводить нужно в поток os, а не в std::cout!


#include <iostream>
#include <typeinfo>

// принимает произвольное число аргументов

void print_values(std::ostream &os){}

template <typename Arg, typename ... Args>
void print_values(std::ostream &os, Arg arg, Args ... args){
    os << typeid(arg).name() << ": " << arg << std::endl;
    print_values(os, args...);
}

int main(){
    print_values(std::cout, 1, 1.f, "Hello");
    return 0;
}

