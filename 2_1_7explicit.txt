Предположим, что класс String имеет оператор приведения к char const *.

struct String
{
    // обычная реализация строки
   ...

    // оператор приведения к char const *
    operator char const *() const;
};

Выберите те строки, которые перестанут компилироваться, если этот оператор объявить как explicit.

String s("Hello");

delete s;    // 1 +++ т.к. оператор приведения добавляет неявное (т.е. автоматическое) преобразование к указателю. Соответственно, для такого объекта можно вызвать delete.

if (s) { }   // 2 +++

char const * p1 = s;  // 3 +++

char const * p2 = (char const*)s;  // 4

char const * p3 = static_cast<char const*>(s);  // 5

char const * s2 = s + 4;  // 6  +++




